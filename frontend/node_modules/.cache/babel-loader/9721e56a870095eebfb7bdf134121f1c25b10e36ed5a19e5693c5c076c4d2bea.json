{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\conveyor-monitoring-system\\\\frontend\\\\src\\\\components\\\\BearingTemperatureMonitor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BearingTemperatureMonitor = () => {\n  _s();\n  const [temperatureData, setTemperatureData] = useState({\n    status: 'normal',\n    stats: {\n      max_temperature: 0,\n      min_temperature: 0,\n      avg_temperature: 0\n    },\n    last_readings: []\n  });\n\n  // 定义警报颜色\n  const statusColors = {\n    normal: '#4caf50',\n    // 绿色\n    warning: '#ff9800',\n    // 黄色\n    danger: '#f44336' // 红色\n  };\n\n  // 轮询获取温度数据\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/bearing-temperature/status');\n        if (response.data.success) {\n          setTemperatureData(response.data.data);\n        }\n      } catch (error) {\n        console.error('获取轴承温度数据失败:', error);\n      }\n    };\n\n    // 每5秒获取一次数据\n    const intervalId = setInterval(fetchData, 5000);\n    fetchData(); // 立即获取一次\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // JSX UI渲染代码，包含状态指示灯、温度统计信息、图表等\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bearing-temperature-monitor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u8F74\\u627F\\u6E29\\u5EA6\\u76D1\\u6D4B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-indicator\",\n      style: {\n        backgroundColor: statusColors[temperatureData.status]\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u5F53\\u524D\\u72B6\\u6001: \", temperatureData.status === 'normal' ? '正常' : temperatureData.status === 'warning' ? '警告' : '危险']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(BearingTemperatureMonitor, \"1+l7j4mfqGNUx0gH8Kb7E1vn9mc=\");\n_c = BearingTemperatureMonitor;\nexport default BearingTemperatureMonitor;\nvar _c;\n$RefreshReg$(_c, \"BearingTemperatureMonitor\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","axios","jsxDEV","_jsxDEV","BearingTemperatureMonitor","_s","temperatureData","setTemperatureData","status","stats","max_temperature","min_temperature","avg_temperature","last_readings","statusColors","normal","warning","danger","fetchData","response","get","data","success","error","console","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/conveyor-monitoring-system/frontend/src/components/BearingTemperatureMonitor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport axios from 'axios';\r\n\r\nconst BearingTemperatureMonitor = () => {\r\n  const [temperatureData, setTemperatureData] = useState({\r\n    status: 'normal',\r\n    stats: {\r\n      max_temperature: 0,\r\n      min_temperature: 0,\r\n      avg_temperature: 0\r\n    },\r\n    last_readings: []\r\n  });\r\n  \r\n  // 定义警报颜色\r\n  const statusColors = {\r\n    normal: '#4caf50',    // 绿色\r\n    warning: '#ff9800',   // 黄色\r\n    danger: '#f44336'     // 红色\r\n  };\r\n  \r\n  // 轮询获取温度数据\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/bearing-temperature/status');\r\n        if (response.data.success) {\r\n          setTemperatureData(response.data.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('获取轴承温度数据失败:', error);\r\n      }\r\n    };\r\n    \r\n    // 每5秒获取一次数据\r\n    const intervalId = setInterval(fetchData, 5000);\r\n    fetchData(); // 立即获取一次\r\n    \r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n  \r\n  // JSX UI渲染代码，包含状态指示灯、温度统计信息、图表等\r\n  return (\r\n    <div className=\"bearing-temperature-monitor\">\r\n      <h2>轴承温度监测</h2>\r\n      \r\n      {/* 状态指示灯 */}\r\n      <div className=\"status-indicator\" \r\n           style={{backgroundColor: statusColors[temperatureData.status]}}>\r\n        <h3>当前状态: {temperatureData.status === 'normal' ? '正常' : \r\n                    (temperatureData.status === 'warning' ? '警告' : '危险')}</h3>\r\n      </div>\r\n      \r\n      {/* 温度图表和其他UI元素... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BearingTemperatureMonitor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,UAAU;AACrG,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC;IACrDgB,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE;MACLC,eAAe,EAAE,CAAC;MAClBC,eAAe,EAAE,CAAC;MAClBC,eAAe,EAAE;IACnB,CAAC;IACDC,aAAa,EAAE;EACjB,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE,SAAS;IAAK;IACtBC,OAAO,EAAE,SAAS;IAAI;IACtBC,MAAM,EAAE,SAAS,CAAK;EACxB,CAAC;;EAED;EACAxB,SAAS,CAAC,MAAM;IACd,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,iCAAiC,CAAC;QACnE,IAAID,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;UACzBf,kBAAkB,CAACY,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;QACxC;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACrC;IACF,CAAC;;IAED;IACA,MAAME,UAAU,GAAGC,WAAW,CAACR,SAAS,EAAE,IAAI,CAAC;IAC/CA,SAAS,CAAC,CAAC,CAAC,CAAC;;IAEb,OAAO,MAAMS,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACEtB,OAAA;IAAKyB,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1C1B,OAAA;MAAA0B,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGf9B,OAAA;MAAKyB,SAAS,EAAC,kBAAkB;MAC5BM,KAAK,EAAE;QAACC,eAAe,EAAErB,YAAY,CAACR,eAAe,CAACE,MAAM;MAAC,CAAE;MAAAqB,QAAA,eAClE1B,OAAA;QAAA0B,QAAA,GAAI,4BAAM,EAACvB,eAAe,CAACE,MAAM,KAAK,QAAQ,GAAG,IAAI,GACxCF,eAAe,CAACE,MAAM,KAAK,SAAS,GAAG,IAAI,GAAG,IAAK;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CArDID,yBAAyB;AAAAgC,EAAA,GAAzBhC,yBAAyB;AAuD/B,eAAeA,yBAAyB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}